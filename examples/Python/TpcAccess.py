# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _TpcAccess
else:
    import _TpcAccess

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)



def TPC_GetInputRange(deviceIx, boardAddress, inputNumber, RangeIdx):
    return _TpcAccess.TPC_GetInputRange(deviceIx, boardAddress, inputNumber, RangeIdx)

def TPC_GetChargeInputRange(deviceIx, boardAddress, inputNumber, RangeIdx):
    return _TpcAccess.TPC_GetChargeInputRange(deviceIx, boardAddress, inputNumber, RangeIdx)

def TPC_GetBoardStatus(deviceIx, boardAddress, status, structSize):
    return _TpcAccess.TPC_GetBoardStatus(deviceIx, boardAddress, status, structSize)

def TPC_GetInputStatus(deviceIx, boardAddress, inputNumber, status, structSize):
    return _TpcAccess.TPC_GetInputStatus(deviceIx, boardAddress, inputNumber, status, structSize)
tpc_noError = _TpcAccess.tpc_noError
tpc_errCalibrating = _TpcAccess.tpc_errCalibrating
tpc_errNoConnection = _TpcAccess.tpc_errNoConnection
tpc_errServerClientVersionConflict = _TpcAccess.tpc_errServerClientVersionConflict
tpc_errDeviceInitializationFailure = _TpcAccess.tpc_errDeviceInitializationFailure
tpc_errHardwareFailure = _TpcAccess.tpc_errHardwareFailure
tpc_errTransmissionError = _TpcAccess.tpc_errTransmissionError
tpc_errStartError = _TpcAccess.tpc_errStartError
tpc_errIncompatibleBoards = _TpcAccess.tpc_errIncompatibleBoards
tpc_errInvalidDeviceIx = _TpcAccess.tpc_errInvalidDeviceIx
tpc_errInvalidBoardAddress = _TpcAccess.tpc_errInvalidBoardAddress
tpc_errInvalidInputNumber = _TpcAccess.tpc_errInvalidInputNumber
tpc_errInvalidIndex = _TpcAccess.tpc_errInvalidIndex
tpc_errBufferTooShort = _TpcAccess.tpc_errBufferTooShort
tpc_errInvalidParameter = _TpcAccess.tpc_errInvalidParameter
tpc_errInvalidParameterValue = _TpcAccess.tpc_errInvalidParameterValue
tpc_errInvalidCommand = _TpcAccess.tpc_errInvalidCommand
tpc_errWrongSystemState = _TpcAccess.tpc_errWrongSystemState
tpc_errInvalidBlockNumber = _TpcAccess.tpc_errInvalidBlockNumber
tpc_errNoData = _TpcAccess.tpc_errNoData
tpc_errNewMeasurement = _TpcAccess.tpc_errNewMeasurement
tpc_errLoadSettingFile = _TpcAccess.tpc_errLoadSettingFile
tpc_errWriteSettingFile = _TpcAccess.tpc_errWriteSettingFile
tpc_errNotImplemented = _TpcAccess.tpc_errNotImplemented
tpc_errInternalError = _TpcAccess.tpc_errInternalError
tpc_errAutoSequence = _TpcAccess.tpc_errAutoSequence
tpc_noHardwarePresent = _TpcAccess.tpc_noHardwarePresent
tpc_errTimeout = _TpcAccess.tpc_errTimeout
tpc_errMeasurementAborted = _TpcAccess.tpc_errMeasurementAborted

def TPC_ErrorToString(errorCode, errorString, maxLen):
    return _TpcAccess.TPC_ErrorToString(errorCode, errorString, maxLen)
tpc_maxBoards = _TpcAccess.tpc_maxBoards
tpc_maxInputs = _TpcAccess.tpc_maxInputs
tpc_maxPathLength = _TpcAccess.tpc_maxPathLength
tpc_maxInputRanges = _TpcAccess.tpc_maxInputRanges
tpc_maxChargeInputRanges = _TpcAccess.tpc_maxChargeInputRanges

def TPC_GetApiVersion():
    return _TpcAccess.TPC_GetApiVersion()
class TPC_Version(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    major = property(_TpcAccess.TPC_Version_major_get, _TpcAccess.TPC_Version_major_set)
    minor = property(_TpcAccess.TPC_Version_minor_get, _TpcAccess.TPC_Version_minor_set)
    build = property(_TpcAccess.TPC_Version_build_get, _TpcAccess.TPC_Version_build_set)
    revision = property(_TpcAccess.TPC_Version_revision_get, _TpcAccess.TPC_Version_revision_set)

    def __init__(self):
        _TpcAccess.TPC_Version_swiginit(self, _TpcAccess.new_TPC_Version())
    __swig_destroy__ = _TpcAccess.delete_TPC_Version

# Register TPC_Version in _TpcAccess:
_TpcAccess.TPC_Version_swigregister(TPC_Version)

def TPC_GetVersion():
    return _TpcAccess.TPC_GetVersion()
class TPC_DateTime(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    year = property(_TpcAccess.TPC_DateTime_year_get, _TpcAccess.TPC_DateTime_year_set)
    month = property(_TpcAccess.TPC_DateTime_month_get, _TpcAccess.TPC_DateTime_month_set)
    day = property(_TpcAccess.TPC_DateTime_day_get, _TpcAccess.TPC_DateTime_day_set)
    hour = property(_TpcAccess.TPC_DateTime_hour_get, _TpcAccess.TPC_DateTime_hour_set)
    minute = property(_TpcAccess.TPC_DateTime_minute_get, _TpcAccess.TPC_DateTime_minute_set)
    second = property(_TpcAccess.TPC_DateTime_second_get, _TpcAccess.TPC_DateTime_second_set)
    milliSecond = property(_TpcAccess.TPC_DateTime_milliSecond_get, _TpcAccess.TPC_DateTime_milliSecond_set)

    def __init__(self):
        _TpcAccess.TPC_DateTime_swiginit(self, _TpcAccess.new_TPC_DateTime())
    __swig_destroy__ = _TpcAccess.delete_TPC_DateTime

# Register TPC_DateTime in _TpcAccess:
_TpcAccess.TPC_DateTime_swigregister(TPC_DateTime)

def TPC_BeginSystemDefinition():
    return _TpcAccess.TPC_BeginSystemDefinition()

def TPC_AddDevice(url):
    return _TpcAccess.TPC_AddDevice(url)

def TPC_AddDeviceEx(url, recvTimeOut, sendTimeOut):
    return _TpcAccess.TPC_AddDeviceEx(url, recvTimeOut, sendTimeOut)

def TPC_EndSystemDefinition(connectionTimeoutMilliseconds):
    return _TpcAccess.TPC_EndSystemDefinition(connectionTimeoutMilliseconds)

def TPC_NumDevices():
    return _TpcAccess.TPC_NumDevices()

def TPC_GetDeviceUrl(index, buffer, maxLen):
    return _TpcAccess.TPC_GetDeviceUrl(index, buffer, maxLen)

def TPC_NewSystem(id):
    return _TpcAccess.TPC_NewSystem(id)

def TPC_DeleteSystem(id):
    return _TpcAccess.TPC_DeleteSystem(id)

def TPC_BeginSystemDefinitionSystem(id):
    return _TpcAccess.TPC_BeginSystemDefinitionSystem(id)

def TPC_AddDeviceSystem(id, url, deviceIx):
    return _TpcAccess.TPC_AddDeviceSystem(id, url, deviceIx)

def TPC_AddDeviceSystemEx(id, url, recvTimeout, sendTimeout, deviceIx):
    return _TpcAccess.TPC_AddDeviceSystemEx(id, url, recvTimeout, sendTimeout, deviceIx)

def TPC_RemoveDeviceSystem(id, url):
    return _TpcAccess.TPC_RemoveDeviceSystem(id, url)

def TPC_EndSystemDefinitionSystem(id, connectionTimeoutMilliseconds):
    return _TpcAccess.TPC_EndSystemDefinitionSystem(id, connectionTimeoutMilliseconds)

def TPC_NumDevicesSystem(id, n):
    return _TpcAccess.TPC_NumDevicesSystem(id, n)

def TPC_GetDeviceUrlSystem(id, index, buffer, maxLen):
    return _TpcAccess.TPC_GetDeviceUrlSystem(id, index, buffer, maxLen)

def TPC_ResetConfigurationSystem(id):
    return _TpcAccess.TPC_ResetConfigurationSystem(id)
class TPC_DeviceInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    deviceID = property(_TpcAccess.TPC_DeviceInfo_deviceID_get, _TpcAccess.TPC_DeviceInfo_deviceID_set)
    serverSoftwareVersion = property(_TpcAccess.TPC_DeviceInfo_serverSoftwareVersion_get, _TpcAccess.TPC_DeviceInfo_serverSoftwareVersion_set)
    simulatedHardware = property(_TpcAccess.TPC_DeviceInfo_simulatedHardware_get, _TpcAccess.TPC_DeviceInfo_simulatedHardware_set)
    installedBoards = property(_TpcAccess.TPC_DeviceInfo_installedBoards_get, _TpcAccess.TPC_DeviceInfo_installedBoards_set)
    deviceName = property(_TpcAccess.TPC_DeviceInfo_deviceName_get, _TpcAccess.TPC_DeviceInfo_deviceName_set)
    deviceDescription = property(_TpcAccess.TPC_DeviceInfo_deviceDescription_get, _TpcAccess.TPC_DeviceInfo_deviceDescription_set)
    deviceMACAddress = property(_TpcAccess.TPC_DeviceInfo_deviceMACAddress_get, _TpcAccess.TPC_DeviceInfo_deviceMACAddress_set)
    UseLocalTime = property(_TpcAccess.TPC_DeviceInfo_UseLocalTime_get, _TpcAccess.TPC_DeviceInfo_UseLocalTime_set)
    AutoStartMeasurement = property(_TpcAccess.TPC_DeviceInfo_AutoStartMeasurement_get, _TpcAccess.TPC_DeviceInfo_AutoStartMeasurement_set)
    AutoStartAutoSequence = property(_TpcAccess.TPC_DeviceInfo_AutoStartAutoSequence_get, _TpcAccess.TPC_DeviceInfo_AutoStartAutoSequence_set)
    ServerPort1 = property(_TpcAccess.TPC_DeviceInfo_ServerPort1_get, _TpcAccess.TPC_DeviceInfo_ServerPort1_set)
    ServerPort2 = property(_TpcAccess.TPC_DeviceInfo_ServerPort2_get, _TpcAccess.TPC_DeviceInfo_ServerPort2_set)
    TargetPort = property(_TpcAccess.TPC_DeviceInfo_TargetPort_get, _TpcAccess.TPC_DeviceInfo_TargetPort_set)
    TwoinOneEnabled = property(_TpcAccess.TPC_DeviceInfo_TwoinOneEnabled_get, _TpcAccess.TPC_DeviceInfo_TwoinOneEnabled_set)
    TwoInOnepassword = property(_TpcAccess.TPC_DeviceInfo_TwoInOnepassword_get, _TpcAccess.TPC_DeviceInfo_TwoInOnepassword_set)
    DataFileName = property(_TpcAccess.TPC_DeviceInfo_DataFileName_get, _TpcAccess.TPC_DeviceInfo_DataFileName_set)
    NumberOfBackupFiles = property(_TpcAccess.TPC_DeviceInfo_NumberOfBackupFiles_get, _TpcAccess.TPC_DeviceInfo_NumberOfBackupFiles_set)
    HdFlushInterval = property(_TpcAccess.TPC_DeviceInfo_HdFlushInterval_get, _TpcAccess.TPC_DeviceInfo_HdFlushInterval_set)
    WriteTroughCache = property(_TpcAccess.TPC_DeviceInfo_WriteTroughCache_get, _TpcAccess.TPC_DeviceInfo_WriteTroughCache_set)
    ModelType = property(_TpcAccess.TPC_DeviceInfo_ModelType_get, _TpcAccess.TPC_DeviceInfo_ModelType_set)
    SyncLinkDetected = property(_TpcAccess.TPC_DeviceInfo_SyncLinkDetected_get, _TpcAccess.TPC_DeviceInfo_SyncLinkDetected_set)

    def __init__(self):
        _TpcAccess.TPC_DeviceInfo_swiginit(self, _TpcAccess.new_TPC_DeviceInfo())
    __swig_destroy__ = _TpcAccess.delete_TPC_DeviceInfo

# Register TPC_DeviceInfo in _TpcAccess:
_TpcAccess.TPC_DeviceInfo_swigregister(TPC_DeviceInfo)

def TPC_GetDeviceInfo(deviceIx, deviceInfo, structSize):
    return _TpcAccess.TPC_GetDeviceInfo(deviceIx, deviceInfo, structSize)

def TPC_SetDeviceSettings(deviceIx, deviceSettings):
    return _TpcAccess.TPC_SetDeviceSettings(deviceIx, deviceSettings)

def TPC_GetFreeDiskSpace(deviceIx, freeDiskSpace, DiskSize):
    return _TpcAccess.TPC_GetFreeDiskSpace(deviceIx, freeDiskSpace, DiskSize)
tpc_optEcrExtensions = _TpcAccess.tpc_optEcrExtensions
tpc_optAvg16 = _TpcAccess.tpc_optAvg16
tpc_optTrgSlewRate = _TpcAccess.tpc_optTrgSlewRate
tpc_optTrgPower = _TpcAccess.tpc_optTrgPower
tpc_sync_oldserver = _TpcAccess.tpc_sync_oldserver
tpc_sync_notdetected = _TpcAccess.tpc_sync_notdetected
tpc_sync_detected = _TpcAccess.tpc_sync_detected
class TPC_BoardInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    boardClass = property(_TpcAccess.TPC_BoardInfo_boardClass_get, _TpcAccess.TPC_BoardInfo_boardClass_set)
    hardwareVersion = property(_TpcAccess.TPC_BoardInfo_hardwareVersion_get, _TpcAccess.TPC_BoardInfo_hardwareVersion_set)
    serialNr = property(_TpcAccess.TPC_BoardInfo_serialNr_get, _TpcAccess.TPC_BoardInfo_serialNr_set)
    driverVersion = property(_TpcAccess.TPC_BoardInfo_driverVersion_get, _TpcAccess.TPC_BoardInfo_driverVersion_set)
    firmwareVersion = property(_TpcAccess.TPC_BoardInfo_firmwareVersion_get, _TpcAccess.TPC_BoardInfo_firmwareVersion_set)
    numberOfInputs = property(_TpcAccess.TPC_BoardInfo_numberOfInputs_get, _TpcAccess.TPC_BoardInfo_numberOfInputs_set)
    maxMemory = property(_TpcAccess.TPC_BoardInfo_maxMemory_get, _TpcAccess.TPC_BoardInfo_maxMemory_set)
    maxSpeed = property(_TpcAccess.TPC_BoardInfo_maxSpeed_get, _TpcAccess.TPC_BoardInfo_maxSpeed_set)
    operationModeOptions = property(_TpcAccess.TPC_BoardInfo_operationModeOptions_get, _TpcAccess.TPC_BoardInfo_operationModeOptions_set)
    averageOptions = property(_TpcAccess.TPC_BoardInfo_averageOptions_get, _TpcAccess.TPC_BoardInfo_averageOptions_set)
    triggerOptions = property(_TpcAccess.TPC_BoardInfo_triggerOptions_get, _TpcAccess.TPC_BoardInfo_triggerOptions_set)
    lastFactoryCalibration = property(_TpcAccess.TPC_BoardInfo_lastFactoryCalibration_get, _TpcAccess.TPC_BoardInfo_lastFactoryCalibration_set)
    lastUserCalibration = property(_TpcAccess.TPC_BoardInfo_lastUserCalibration_get, _TpcAccess.TPC_BoardInfo_lastUserCalibration_set)

    def __init__(self):
        _TpcAccess.TPC_BoardInfo_swiginit(self, _TpcAccess.new_TPC_BoardInfo())
    __swig_destroy__ = _TpcAccess.delete_TPC_BoardInfo

# Register TPC_BoardInfo in _TpcAccess:
_TpcAccess.TPC_BoardInfo_swigregister(TPC_BoardInfo)

def TPC_GetBoardInfo(deviceIx, boardAddress, boardInfo, structSize):
    return _TpcAccess.TPC_GetBoardInfo(deviceIx, boardAddress, boardInfo, structSize)
tpc_optOfsFullRange = _TpcAccess.tpc_optOfsFullRange
tpc_optFilterModule1 = _TpcAccess.tpc_optFilterModule1
tpc_optFilterModule2 = _TpcAccess.tpc_optFilterModule2
tpc_optDiffModule1 = _TpcAccess.tpc_optDiffModule1
tpc_optIcpSource = _TpcAccess.tpc_optIcpSource
tpc_opt50Ohm = _TpcAccess.tpc_opt50Ohm
tpc_optIcpProg = _TpcAccess.tpc_optIcpProg
tpc_optCharge = _TpcAccess.tpc_optCharge
class TPC_InputInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    inputClass = property(_TpcAccess.TPC_InputInfo_inputClass_get, _TpcAccess.TPC_InputInfo_inputClass_set)
    hardwareVersion = property(_TpcAccess.TPC_InputInfo_hardwareVersion_get, _TpcAccess.TPC_InputInfo_hardwareVersion_set)
    maxAdcSpeed = property(_TpcAccess.TPC_InputInfo_maxAdcSpeed_get, _TpcAccess.TPC_InputInfo_maxAdcSpeed_set)
    adcResolution = property(_TpcAccess.TPC_InputInfo_adcResolution_get, _TpcAccess.TPC_InputInfo_adcResolution_set)
    offsetOptions = property(_TpcAccess.TPC_InputInfo_offsetOptions_get, _TpcAccess.TPC_InputInfo_offsetOptions_set)
    filterOptions = property(_TpcAccess.TPC_InputInfo_filterOptions_get, _TpcAccess.TPC_InputInfo_filterOptions_set)
    diffOptions = property(_TpcAccess.TPC_InputInfo_diffOptions_get, _TpcAccess.TPC_InputInfo_diffOptions_set)
    inputCouplingOptions = property(_TpcAccess.TPC_InputInfo_inputCouplingOptions_get, _TpcAccess.TPC_InputInfo_inputCouplingOptions_set)
    inputRanges = property(_TpcAccess.TPC_InputInfo_inputRanges_get, _TpcAccess.TPC_InputInfo_inputRanges_set)
    maxMarkerMask = property(_TpcAccess.TPC_InputInfo_maxMarkerMask_get, _TpcAccess.TPC_InputInfo_maxMarkerMask_set)
    chargeInputRanges = property(_TpcAccess.TPC_InputInfo_chargeInputRanges_get, _TpcAccess.TPC_InputInfo_chargeInputRanges_set)

    def __init__(self):
        _TpcAccess.TPC_InputInfo_swiginit(self, _TpcAccess.new_TPC_InputInfo())
    __swig_destroy__ = _TpcAccess.delete_TPC_InputInfo

# Register TPC_InputInfo in _TpcAccess:
_TpcAccess.TPC_InputInfo_swigregister(TPC_InputInfo)

def TPC_GetInputInfo(deviceIx, boardAddress, inputNumber, inputInfo, structSize):
    return _TpcAccess.TPC_GetInputInfo(deviceIx, boardAddress, inputNumber, inputInfo, structSize)

def TPC_GetClusterNumbers(deviceIx, clusterNumbers):
    return _TpcAccess.TPC_GetClusterNumbers(deviceIx, clusterNumbers)

def TPC_SetClusterNumbers(deviceIx, clusterNumbers):
    return _TpcAccess.TPC_SetClusterNumbers(deviceIx, clusterNumbers)

def TPC_ClusterNumberToBoardAddress(deviceIx, clusterNumber, boardAddress):
    return _TpcAccess.TPC_ClusterNumberToBoardAddress(deviceIx, clusterNumber, boardAddress)

def TPC_ResetConfiguration():
    return _TpcAccess.TPC_ResetConfiguration()
tpc_parOperationMode = _TpcAccess.tpc_parOperationMode
tpc_parMultiplexerMode = _TpcAccess.tpc_parMultiplexerMode
tpc_parTimebaseSource = _TpcAccess.tpc_parTimebaseSource
tpc_parSamplingFrequency = _TpcAccess.tpc_parSamplingFrequency
tpc_parExternalClockDivisor = _TpcAccess.tpc_parExternalClockDivisor
tpc_parExternalTriggerMode = _TpcAccess.tpc_parExternalTriggerMode
tpc_parExtClockSamplingFrequency = _TpcAccess.tpc_parExtClockSamplingFrequency
tpc_parBlkNumberOfBlocks = _TpcAccess.tpc_parBlkNumberOfBlocks
tpc_parBlkBlockLength = _TpcAccess.tpc_parBlkBlockLength
tpc_parBlkTriggerDelay = _TpcAccess.tpc_parBlkTriggerDelay
tpc_parContMaximumDataLength = _TpcAccess.tpc_parContMaximumDataLength
tpc_parContStopTrailer = _TpcAccess.tpc_parContStopTrailer
tpc_parContEnableStopTrigger = _TpcAccess.tpc_parContEnableStopTrigger
tpc_parContEnableRecLengthLimit = _TpcAccess.tpc_parContEnableRecLengthLimit
tpc_parScopeAutoTrigger = _TpcAccess.tpc_parScopeAutoTrigger
tpc_parScopeSingleShot = _TpcAccess.tpc_parScopeSingleShot
tpc_parScopeBlockLength = _TpcAccess.tpc_parScopeBlockLength
tpc_parScopeTriggerDelay = _TpcAccess.tpc_parScopeTriggerDelay
tpc_parEcrDualMode = _TpcAccess.tpc_parEcrDualMode
tpc_parEcrMinimumBlockLength = _TpcAccess.tpc_parEcrMinimumBlockLength
tpc_parEcrTriggerDelay = _TpcAccess.tpc_parEcrTriggerDelay
tpc_parEcrPreTrigger = _TpcAccess.tpc_parEcrPreTrigger
tpc_parEcrPostTrigger = _TpcAccess.tpc_parEcrPostTrigger
tpc_parEcrMaximumNumberOfBlocks = _TpcAccess.tpc_parEcrMaximumNumberOfBlocks
tpc_parEcrEnableHoldOff = _TpcAccess.tpc_parEcrEnableHoldOff
tpc_parEcrHoldOffTime = _TpcAccess.tpc_parEcrHoldOffTime
tpc_parEcrMaximumBlockLength = _TpcAccess.tpc_parEcrMaximumBlockLength
tpc_parEcrRetriggerTime = _TpcAccess.tpc_parEcrRetriggerTime
tpc_parEcrTrailer = _TpcAccess.tpc_parEcrTrailer
tpc_parEcrClockDivisor = _TpcAccess.tpc_parEcrClockDivisor
tpc_parEcrDualEnableTrailer = _TpcAccess.tpc_parEcrDualEnableTrailer
tpc_parEcrDualTrailer = _TpcAccess.tpc_parEcrDualTrailer
tpc_parEcrDualEnableRecLengthLimit = _TpcAccess.tpc_parEcrDualEnableRecLengthLimit
tpc_parEcrDualMaxRecLength = _TpcAccess.tpc_parEcrDualMaxRecLength
tpc_parEcrEnableStopTrigger = _TpcAccess.tpc_parEcrEnableStopTrigger
tpc_parEcrEnableRetrigger = _TpcAccess.tpc_parEcrEnableRetrigger
tpc_parInputMode = _TpcAccess.tpc_parInputMode
tpc_parTriggerOnly = _TpcAccess.tpc_parTriggerOnly
tpc_parInputCoupling = _TpcAccess.tpc_parInputCoupling
tpc_parRange = _TpcAccess.tpc_parRange
tpc_parOffset = _TpcAccess.tpc_parOffset
tpc_parInvert = _TpcAccess.tpc_parInvert
tpc_parIEPECurrent = _TpcAccess.tpc_parIEPECurrent
tpc_parFilterMode = _TpcAccess.tpc_parFilterMode
tpc_parFilterFreq = _TpcAccess.tpc_parFilterFreq
tpc_parAveragingMode = _TpcAccess.tpc_parAveragingMode
tpc_parPhysFactor = _TpcAccess.tpc_parPhysFactor
tpc_parPhysConstant = _TpcAccess.tpc_parPhysConstant
tpc_parTrgMode = _TpcAccess.tpc_parTrgMode
tpc_parTrgComparatorMode = _TpcAccess.tpc_parTrgComparatorMode
tpc_parTrgLevelA = _TpcAccess.tpc_parTrgLevelA
tpc_parTrgLevelB = _TpcAccess.tpc_parTrgLevelB
tpc_parTrgTimerTSamples = _TpcAccess.tpc_parTrgTimerTSamples
tpc_parTrgPreTimerTSamples = _TpcAccess.tpc_parTrgPreTimerTSamples
tpc_parTrgSlewRateDTSamples = _TpcAccess.tpc_parTrgSlewRateDTSamples
tpc_parTrgSlewRateHysteresis = _TpcAccess.tpc_parTrgSlewRateHysteresis
tpc_parTrgSlewRateComparatorMode = _TpcAccess.tpc_parTrgSlewRateComparatorMode
tpc_parTrgComparator2Mode = _TpcAccess.tpc_parTrgComparator2Mode
tpc_parTrgLevel2A = _TpcAccess.tpc_parTrgLevel2A
tpc_parTrgLevel2B = _TpcAccess.tpc_parTrgLevel2B
tpc_parShowTrgProduct = _TpcAccess.tpc_parShowTrgProduct
tpc_parANDTriggerMask = _TpcAccess.tpc_parANDTriggerMask
tpc_parDualModeStopTrgComparatorMode = _TpcAccess.tpc_parDualModeStopTrgComparatorMode
tpc_parDualModeStopTrgLevelA = _TpcAccess.tpc_parDualModeStopTrgLevelA
tpc_parDualModeStopTrgLevelB = _TpcAccess.tpc_parDualModeStopTrgLevelB
tpc_parResetOverflow = _TpcAccess.tpc_parResetOverflow
tpc_parExternalTimebaseOutFreq = _TpcAccess.tpc_parExternalTimebaseOutFreq
tpc_parGPSSync = _TpcAccess.tpc_parGPSSync
tpc_parLXIMsgConfig = _TpcAccess.tpc_parLXIMsgConfig
tpc_parTrgDigPosSlope = _TpcAccess.tpc_parTrgDigPosSlope
tpc_parTrgDigNegSlope = _TpcAccess.tpc_parTrgDigNegSlope
tpc_ReservedParam1 = _TpcAccess.tpc_ReservedParam1
tpc_ReservedParam2 = _TpcAccess.tpc_ReservedParam2
tpc_parTrgDigPls = _TpcAccess.tpc_parTrgDigPls
tpc_parGPSMode = _TpcAccess.tpc_parGPSMode
tpc_parGPSTimer = _TpcAccess.tpc_parGPSTimer
tpc_parSyncPingMode = _TpcAccess.tpc_parSyncPingMode
tpc_parSyncDelay = _TpcAccess.tpc_parSyncDelay
tpc_parChargeMode = _TpcAccess.tpc_parChargeMode
tpc_gps_onTrigger = _TpcAccess.tpc_gps_onTrigger
tpc_gps_Continuous = _TpcAccess.tpc_gps_Continuous
tpc_opModeScope = _TpcAccess.tpc_opModeScope
tpc_opModeBlock = _TpcAccess.tpc_opModeBlock
tpc_opModeContinuous = _TpcAccess.tpc_opModeContinuous
tpc_opModeSingleBlock = _TpcAccess.tpc_opModeSingleBlock
tpc_opModeEventRecorderSingle = _TpcAccess.tpc_opModeEventRecorderSingle
tpc_opModeEventRecorderSingleDual = _TpcAccess.tpc_opModeEventRecorderSingleDual
tpc_opModeEventRecorderMulti = _TpcAccess.tpc_opModeEventRecorderMulti
tpc_opModeEventRecorderMultiDual = _TpcAccess.tpc_opModeEventRecorderMultiDual
tpc_tbSrcInternal = _TpcAccess.tpc_tbSrcInternal
tpc_tbSrcExternal = _TpcAccess.tpc_tbSrcExternal
tpc_extTrgOff = _TpcAccess.tpc_extTrgOff
tpc_extTrgPosSlope = _TpcAccess.tpc_extTrgPosSlope
tpc_extTrgNegSlope = _TpcAccess.tpc_extTrgNegSlope
tpc_inpOff = _TpcAccess.tpc_inpOff
tpc_inpSingleEnded = _TpcAccess.tpc_inpSingleEnded
tpc_inpDifferential = _TpcAccess.tpc_inpDifferential
tpc_inpCouplingDC = _TpcAccess.tpc_inpCouplingDC
tpc_inpCouplingAC = _TpcAccess.tpc_inpCouplingAC
tpc_inpCouplingICP = _TpcAccess.tpc_inpCouplingICP
tpc_inpCouplingDC50 = _TpcAccess.tpc_inpCouplingDC50
tpc_inpCouplingAC50 = _TpcAccess.tpc_inpCouplingAC50
tpc_inpCouplingCharge = _TpcAccess.tpc_inpCouplingCharge
tpc_avgOff = _TpcAccess.tpc_avgOff
tpc_avg14bit = _TpcAccess.tpc_avg14bit
tpc_avg16bit = _TpcAccess.tpc_avg16bit
tpc_inpFilterOff = _TpcAccess.tpc_inpFilterOff
tpc_inpFilterRC1 = _TpcAccess.tpc_inpFilterRC1
tpc_inpFilterRC2 = _TpcAccess.tpc_inpFilterRC2
tpc_inpFilterModule = _TpcAccess.tpc_inpFilterModule
tpc_trgMasterDisable = _TpcAccess.tpc_trgMasterDisable
tpc_trgBasic = _TpcAccess.tpc_trgBasic
tpc_trgInputMultiplier = _TpcAccess.tpc_trgInputMultiplier
tpc_trgSlewRate = _TpcAccess.tpc_trgSlewRate
tpc_trgTimerOff = _TpcAccess.tpc_trgTimerOff
tpc_trgLongPulse = _TpcAccess.tpc_trgLongPulse
tpc_trgShortPulse = _TpcAccess.tpc_trgShortPulse
tpc_trgLongPeriod = _TpcAccess.tpc_trgLongPeriod
tpc_trgShortPeriod = _TpcAccess.tpc_trgShortPeriod
tpc_trgEqualPulse = _TpcAccess.tpc_trgEqualPulse
tpc_trgNotEqualPulse = _TpcAccess.tpc_trgNotEqualPulse
tpc_trgLongDelay = _TpcAccess.tpc_trgLongDelay
tpc_trgShortDelay = _TpcAccess.tpc_trgShortDelay
tpc_trgEqualDelay = _TpcAccess.tpc_trgEqualDelay
tpc_trgNotEqualDelay = _TpcAccess.tpc_trgNotEqualDelay
tpc_trgEqualPeriod = _TpcAccess.tpc_trgEqualPeriod
tpc_trgNotEqualPeriod = _TpcAccess.tpc_trgNotEqualPeriod
tpc_trgTimerMask = _TpcAccess.tpc_trgTimerMask
tpc_trgLongPulseTwoComp = _TpcAccess.tpc_trgLongPulseTwoComp
tpc_trgShortPulseTwoComp = _TpcAccess.tpc_trgShortPulseTwoComp
tpc_trgTwoComparatorsOr = _TpcAccess.tpc_trgTwoComparatorsOr
tpc_trgTwoComparatorsAnd = _TpcAccess.tpc_trgTwoComparatorsAnd
tpc_trgTwoComparatorsMask = _TpcAccess.tpc_trgTwoComparatorsMask
tpc_trgCompOff = _TpcAccess.tpc_trgCompOff
tpc_trgCompPositiveSlope = _TpcAccess.tpc_trgCompPositiveSlope
tpc_trgCompNegativeSlope = _TpcAccess.tpc_trgCompNegativeSlope
tpc_trgCompBothSlopes = _TpcAccess.tpc_trgCompBothSlopes
tpc_trgCompWindowOut = _TpcAccess.tpc_trgCompWindowOut
tpc_trgCompWindowIn = _TpcAccess.tpc_trgCompWindowIn
tpc_trgCompStateWindowOut = _TpcAccess.tpc_trgCompStateWindowOut
tpc_trgCompStateWindowIn = _TpcAccess.tpc_trgCompStateWindowIn
tpc_etrgOff = _TpcAccess.tpc_etrgOff
tpc_etrgSlope = _TpcAccess.tpc_etrgSlope
tpc_etrgWindow = _TpcAccess.tpc_etrgWindow
tpc_etrgState = _TpcAccess.tpc_etrgState
tpc_etrgSlewRate = _TpcAccess.tpc_etrgSlewRate
tpc_etrgLongPulse = _TpcAccess.tpc_etrgLongPulse
tpc_etrgShortPulse = _TpcAccess.tpc_etrgShortPulse
tpc_etrgLongPeriod = _TpcAccess.tpc_etrgLongPeriod
tpc_etrgShortPeriod = _TpcAccess.tpc_etrgShortPeriod
tpc_etrgLongDelay = _TpcAccess.tpc_etrgLongDelay
tpc_etrgShortDelay = _TpcAccess.tpc_etrgShortDelay
tpc_etrgEqualPulse = _TpcAccess.tpc_etrgEqualPulse
tpc_etrgNotEqualPulse = _TpcAccess.tpc_etrgNotEqualPulse
tpc_etrgEqualPeriod = _TpcAccess.tpc_etrgEqualPeriod
tpc_etrgNotEqualPeriod = _TpcAccess.tpc_etrgNotEqualPeriod
tpc_etrgEqualDelay = _TpcAccess.tpc_etrgEqualDelay
tpc_etrgNotEqualDelay = _TpcAccess.tpc_etrgNotEqualDelay
tpc_etrgCompPositive = _TpcAccess.tpc_etrgCompPositive
tpc_etrgCompNegative = _TpcAccess.tpc_etrgCompNegative
tpc_etrgCompBoth = _TpcAccess.tpc_etrgCompBoth
tpc_etrgNone = _TpcAccess.tpc_etrgNone
tpc_etrgANDGroup1 = _TpcAccess.tpc_etrgANDGroup1
tpc_etrgANDGroup2 = _TpcAccess.tpc_etrgANDGroup2
tpc_etrgANDGroup3 = _TpcAccess.tpc_etrgANDGroup3
tpc_etrgANDGroup4 = _TpcAccess.tpc_etrgANDGroup4
tpc_etrgInputMultiplier = _TpcAccess.tpc_etrgInputMultiplier
tpc_etrgShowMultipliedSignal = _TpcAccess.tpc_etrgShowMultipliedSignal
tpc_etrgSetMasterDisable = _TpcAccess.tpc_etrgSetMasterDisable
tpc_etrgIgnoreLevelAndTime = _TpcAccess.tpc_etrgIgnoreLevelAndTime
tpc_invOff = _TpcAccess.tpc_invOff
tpc_invAnalog = _TpcAccess.tpc_invAnalog
tpc_invM1 = _TpcAccess.tpc_invM1
tpc_invM2 = _TpcAccess.tpc_invM2
tpc_serTrgProtNone = _TpcAccess.tpc_serTrgProtNone
tpc_serTrgProtI2C = _TpcAccess.tpc_serTrgProtI2C
tpc_serTrgProtCAN = _TpcAccess.tpc_serTrgProtCAN
tpc_serTrgMarker1 = _TpcAccess.tpc_serTrgMarker1
tpc_serTrgMarker2 = _TpcAccess.tpc_serTrgMarker2
tpc_serTrgAnalog = _TpcAccess.tpc_serTrgAnalog
tpc_i2cEveryStart = _TpcAccess.tpc_i2cEveryStart
tpc_i2cEveryStop = _TpcAccess.tpc_i2cEveryStop
tpc_i2cEveryRestart = _TpcAccess.tpc_i2cEveryRestart
tpc_i2cEveryNack = _TpcAccess.tpc_i2cEveryNack
tpc_i2cAddress = _TpcAccess.tpc_i2cAddress
tpc_i2cAddressAndData = _TpcAccess.tpc_i2cAddressAndData
tpc_i2cRWIgnore = _TpcAccess.tpc_i2cRWIgnore
tpc_i2cRead = _TpcAccess.tpc_i2cRead
tpc_i2cWrite = _TpcAccess.tpc_i2cWrite
tpc_i2cAdr7Bit = _TpcAccess.tpc_i2cAdr7Bit
tpc_i2cAdr10Bit = _TpcAccess.tpc_i2cAdr10Bit
tpc_i2cAckIgnore = _TpcAccess.tpc_i2cAckIgnore
tpc_i2cAck = _TpcAccess.tpc_i2cAck
tpc_i2cNack = _TpcAccess.tpc_i2cNack
tpc_canEveryFrame = _TpcAccess.tpc_canEveryFrame
tpc_canRemote = _TpcAccess.tpc_canRemote
tpc_canId = _TpcAccess.tpc_canId
tpc_canIdAndData = _TpcAccess.tpc_canIdAndData
tpc_canError = _TpcAccess.tpc_canError
tpc_canIdStandard = _TpcAccess.tpc_canIdStandard
tpc_canIdExtended = _TpcAccess.tpc_canIdExtended
tpc_canIdBoth = _TpcAccess.tpc_canIdBoth
class TPC_I2CTriggerSettings(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    mode = property(_TpcAccess.TPC_I2CTriggerSettings_mode_get, _TpcAccess.TPC_I2CTriggerSettings_mode_set)
    chDataInputNumber = property(_TpcAccess.TPC_I2CTriggerSettings_chDataInputNumber_get, _TpcAccess.TPC_I2CTriggerSettings_chDataInputNumber_set)
    chDataInputSignal = property(_TpcAccess.TPC_I2CTriggerSettings_chDataInputSignal_get, _TpcAccess.TPC_I2CTriggerSettings_chDataInputSignal_set)
    chDataLevelL = property(_TpcAccess.TPC_I2CTriggerSettings_chDataLevelL_get, _TpcAccess.TPC_I2CTriggerSettings_chDataLevelL_set)
    chDataLevelH = property(_TpcAccess.TPC_I2CTriggerSettings_chDataLevelH_get, _TpcAccess.TPC_I2CTriggerSettings_chDataLevelH_set)
    chClockInputNumber = property(_TpcAccess.TPC_I2CTriggerSettings_chClockInputNumber_get, _TpcAccess.TPC_I2CTriggerSettings_chClockInputNumber_set)
    chClockInputSignal = property(_TpcAccess.TPC_I2CTriggerSettings_chClockInputSignal_get, _TpcAccess.TPC_I2CTriggerSettings_chClockInputSignal_set)
    chClockLevelL = property(_TpcAccess.TPC_I2CTriggerSettings_chClockLevelL_get, _TpcAccess.TPC_I2CTriggerSettings_chClockLevelL_set)
    chClockLevelH = property(_TpcAccess.TPC_I2CTriggerSettings_chClockLevelH_get, _TpcAccess.TPC_I2CTriggerSettings_chClockLevelH_set)
    ack = property(_TpcAccess.TPC_I2CTriggerSettings_ack_get, _TpcAccess.TPC_I2CTriggerSettings_ack_set)
    adrRWBit = property(_TpcAccess.TPC_I2CTriggerSettings_adrRWBit_get, _TpcAccess.TPC_I2CTriggerSettings_adrRWBit_set)
    adrType = property(_TpcAccess.TPC_I2CTriggerSettings_adrType_get, _TpcAccess.TPC_I2CTriggerSettings_adrType_set)
    adrInRange = property(_TpcAccess.TPC_I2CTriggerSettings_adrInRange_get, _TpcAccess.TPC_I2CTriggerSettings_adrInRange_set)
    adrLow = property(_TpcAccess.TPC_I2CTriggerSettings_adrLow_get, _TpcAccess.TPC_I2CTriggerSettings_adrLow_set)
    adrHigh = property(_TpcAccess.TPC_I2CTriggerSettings_adrHigh_get, _TpcAccess.TPC_I2CTriggerSettings_adrHigh_set)
    adrMask = property(_TpcAccess.TPC_I2CTriggerSettings_adrMask_get, _TpcAccess.TPC_I2CTriggerSettings_adrMask_set)
    dataStartByte = property(_TpcAccess.TPC_I2CTriggerSettings_dataStartByte_get, _TpcAccess.TPC_I2CTriggerSettings_dataStartByte_set)
    dataLength = property(_TpcAccess.TPC_I2CTriggerSettings_dataLength_get, _TpcAccess.TPC_I2CTriggerSettings_dataLength_set)
    dataInRange = property(_TpcAccess.TPC_I2CTriggerSettings_dataInRange_get, _TpcAccess.TPC_I2CTriggerSettings_dataInRange_set)
    dataLow = property(_TpcAccess.TPC_I2CTriggerSettings_dataLow_get, _TpcAccess.TPC_I2CTriggerSettings_dataLow_set)
    dataHigh = property(_TpcAccess.TPC_I2CTriggerSettings_dataHigh_get, _TpcAccess.TPC_I2CTriggerSettings_dataHigh_set)
    dataMask = property(_TpcAccess.TPC_I2CTriggerSettings_dataMask_get, _TpcAccess.TPC_I2CTriggerSettings_dataMask_set)

    def __init__(self):
        _TpcAccess.TPC_I2CTriggerSettings_swiginit(self, _TpcAccess.new_TPC_I2CTriggerSettings())
    __swig_destroy__ = _TpcAccess.delete_TPC_I2CTriggerSettings

# Register TPC_I2CTriggerSettings in _TpcAccess:
_TpcAccess.TPC_I2CTriggerSettings_swigregister(TPC_I2CTriggerSettings)
class TPC_CANTriggerSettings(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    mode = property(_TpcAccess.TPC_CANTriggerSettings_mode_get, _TpcAccess.TPC_CANTriggerSettings_mode_set)
    chDataInputNumber = property(_TpcAccess.TPC_CANTriggerSettings_chDataInputNumber_get, _TpcAccess.TPC_CANTriggerSettings_chDataInputNumber_set)
    chDataInputSignal = property(_TpcAccess.TPC_CANTriggerSettings_chDataInputSignal_get, _TpcAccess.TPC_CANTriggerSettings_chDataInputSignal_set)
    chDataLevelL = property(_TpcAccess.TPC_CANTriggerSettings_chDataLevelL_get, _TpcAccess.TPC_CANTriggerSettings_chDataLevelL_set)
    chDataLevelH = property(_TpcAccess.TPC_CANTriggerSettings_chDataLevelH_get, _TpcAccess.TPC_CANTriggerSettings_chDataLevelH_set)
    bitRate = property(_TpcAccess.TPC_CANTriggerSettings_bitRate_get, _TpcAccess.TPC_CANTriggerSettings_bitRate_set)
    bitSamplePoint = property(_TpcAccess.TPC_CANTriggerSettings_bitSamplePoint_get, _TpcAccess.TPC_CANTriggerSettings_bitSamplePoint_set)
    idFormat = property(_TpcAccess.TPC_CANTriggerSettings_idFormat_get, _TpcAccess.TPC_CANTriggerSettings_idFormat_set)
    idInRange = property(_TpcAccess.TPC_CANTriggerSettings_idInRange_get, _TpcAccess.TPC_CANTriggerSettings_idInRange_set)
    idLow = property(_TpcAccess.TPC_CANTriggerSettings_idLow_get, _TpcAccess.TPC_CANTriggerSettings_idLow_set)
    idHigh = property(_TpcAccess.TPC_CANTriggerSettings_idHigh_get, _TpcAccess.TPC_CANTriggerSettings_idHigh_set)
    idMask = property(_TpcAccess.TPC_CANTriggerSettings_idMask_get, _TpcAccess.TPC_CANTriggerSettings_idMask_set)
    dataLength = property(_TpcAccess.TPC_CANTriggerSettings_dataLength_get, _TpcAccess.TPC_CANTriggerSettings_dataLength_set)
    dataInRange = property(_TpcAccess.TPC_CANTriggerSettings_dataInRange_get, _TpcAccess.TPC_CANTriggerSettings_dataInRange_set)
    dataLow = property(_TpcAccess.TPC_CANTriggerSettings_dataLow_get, _TpcAccess.TPC_CANTriggerSettings_dataLow_set)
    dataHigh = property(_TpcAccess.TPC_CANTriggerSettings_dataHigh_get, _TpcAccess.TPC_CANTriggerSettings_dataHigh_set)
    dataMask = property(_TpcAccess.TPC_CANTriggerSettings_dataMask_get, _TpcAccess.TPC_CANTriggerSettings_dataMask_set)

    def __init__(self):
        _TpcAccess.TPC_CANTriggerSettings_swiginit(self, _TpcAccess.new_TPC_CANTriggerSettings())
    __swig_destroy__ = _TpcAccess.delete_TPC_CANTriggerSettings

# Register TPC_CANTriggerSettings in _TpcAccess:
_TpcAccess.TPC_CANTriggerSettings_swigregister(TPC_CANTriggerSettings)

def TPC_SetParameter(deviceIx, boardAddress, inputNumber, parameter, value):
    return _TpcAccess.TPC_SetParameter(deviceIx, boardAddress, inputNumber, parameter, value)

def TPC_GetParameter(deviceIx, boardAddress, inputNumber, parameter):
    return _TpcAccess.TPC_GetParameter(deviceIx, boardAddress, inputNumber, parameter)

def TPC_SetAttribute(deviceIx, boardAddress, inputNumber, key, value):
    return _TpcAccess.TPC_SetAttribute(deviceIx, boardAddress, inputNumber, key, value)

def TPC_GetAttribute(deviceIx, boardAddress, inputNumber, key, buffer, maxLen):
    return _TpcAccess.TPC_GetAttribute(deviceIx, boardAddress, inputNumber, key, buffer, maxLen)

def TPC_GetAllAttributes(deviceIx, callback, userData):
    return _TpcAccess.TPC_GetAllAttributes(deviceIx, callback, userData)
class TPC_AssociatedChannel(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    boardAddress = property(_TpcAccess.TPC_AssociatedChannel_boardAddress_get, _TpcAccess.TPC_AssociatedChannel_boardAddress_set)
    inputNumber = property(_TpcAccess.TPC_AssociatedChannel_inputNumber_get, _TpcAccess.TPC_AssociatedChannel_inputNumber_set)

    def __init__(self):
        _TpcAccess.TPC_AssociatedChannel_swiginit(self, _TpcAccess.new_TPC_AssociatedChannel())
    __swig_destroy__ = _TpcAccess.delete_TPC_AssociatedChannel

# Register TPC_AssociatedChannel in _TpcAccess:
_TpcAccess.TPC_AssociatedChannel_swigregister(TPC_AssociatedChannel)

def TPC_GetAssociatedChannels(deviceIx, boardAddress, inputNumber, list, count):
    return _TpcAccess.TPC_GetAssociatedChannels(deviceIx, boardAddress, inputNumber, list, count)

def TPC_SetAssociatedChannels(deviceIx, boardAddress, inputNumber, list, count):
    return _TpcAccess.TPC_SetAssociatedChannels(deviceIx, boardAddress, inputNumber, list, count)

def TPC_BeginSet():
    return _TpcAccess.TPC_BeginSet()

def TPC_EndSet():
    return _TpcAccess.TPC_EndSet()

def TPC_CancelSet():
    return _TpcAccess.TPC_CancelSet()

def TPC_SetTrigger(deviceIx, boardAddress, inputNumber, mode, compMode, flags, level, hysteresis, time=0, time2=0):
    return _TpcAccess.TPC_SetTrigger(deviceIx, boardAddress, inputNumber, mode, compMode, flags, level, hysteresis, time, time2)

def TPC_GetTrigger(deviceIx, boardAddress, inputNumber, mode, compMode, flags, level, hysteresis, time, time2):
    return _TpcAccess.TPC_GetTrigger(deviceIx, boardAddress, inputNumber, mode, compMode, flags, level, hysteresis, time, time2)

def TPC_ResetSerTrg(deviceIx, boardAddress):
    return _TpcAccess.TPC_ResetSerTrg(deviceIx, boardAddress)

def TPC_GetSerTrgProtocol(deviceIx, boardAddress, protocol):
    return _TpcAccess.TPC_GetSerTrgProtocol(deviceIx, boardAddress, protocol)

def TPC_SetI2CTrigger(deviceIx, boardAddress, settings):
    return _TpcAccess.TPC_SetI2CTrigger(deviceIx, boardAddress, settings)

def TPC_GetI2CTrigger(deviceIx, boardAddress, settings):
    return _TpcAccess.TPC_GetI2CTrigger(deviceIx, boardAddress, settings)

def TPC_SetCANTrigger(deviceIx, boardAddress, settings):
    return _TpcAccess.TPC_SetCANTrigger(deviceIx, boardAddress, settings)

def TPC_GetCANTrigger(deviceIx, boardAddress, settings):
    return _TpcAccess.TPC_GetCANTrigger(deviceIx, boardAddress, settings)
tpc_cmdStart = _TpcAccess.tpc_cmdStart
tpc_cmdStop = _TpcAccess.tpc_cmdStop
tpc_cmdDisarm = _TpcAccess.tpc_cmdDisarm
tpc_cmdArm = _TpcAccess.tpc_cmdArm
tpc_cmdTrigger = _TpcAccess.tpc_cmdTrigger
tpc_cmdReserved1 = _TpcAccess.tpc_cmdReserved1
tpc_cmdArmExtCommands = _TpcAccess.tpc_cmdArmExtCommands
tpc_cmdDisarmExtCommands = _TpcAccess.tpc_cmdDisarmExtCommands
tpc_cmdStartGPSSynced = _TpcAccess.tpc_cmdStartGPSSynced
tpc_cmdInitSync = _TpcAccess.tpc_cmdInitSync

def TPC_ExecuteSystemCommand(command):
    return _TpcAccess.TPC_ExecuteSystemCommand(command)

def TPC_ExecuteSystemCommandSystem(id, command):
    return _TpcAccess.TPC_ExecuteSystemCommandSystem(id, command)

def TPC_MakeMeasurement(timeout):
    return _TpcAccess.TPC_MakeMeasurement(timeout)

def TPC_StartCalibration(deviceIx):
    return _TpcAccess.TPC_StartCalibration(deviceIx)
AUT_NO_SEQUENCE = _TpcAccess.AUT_NO_SEQUENCE
AUT_LOADED = _TpcAccess.AUT_LOADED
AUT_RUNNING_LS = _TpcAccess.AUT_RUNNING_LS
AUT_RUNNING_MEAS = _TpcAccess.AUT_RUNNING_MEAS
AUT_RUNNING_WEOR = _TpcAccess.AUT_RUNNING_WEOR
AUTO_RUNNING_DELAY = _TpcAccess.AUTO_RUNNING_DELAY
AUTO_RUNNING_CALIB = _TpcAccess.AUTO_RUNNING_CALIB
AUTO_RUNNING_SAVE = _TpcAccess.AUTO_RUNNING_SAVE
AUTO_STOP = _TpcAccess.AUTO_STOP
tpc_recAborted = _TpcAccess.tpc_recAborted
tpc_recStarting = _TpcAccess.tpc_recStarting
tpc_recRecording = _TpcAccess.tpc_recRecording
tpc_recStopped = _TpcAccess.tpc_recStopped
tpc_recStartError = _TpcAccess.tpc_recStartError
tpc_recDisarmed = _TpcAccess.tpc_recDisarmed
tpc_recArmed = _TpcAccess.tpc_recArmed
tpc_recTriggered = _TpcAccess.tpc_recTriggered
tpc_extStartDisarmed = _TpcAccess.tpc_extStartDisarmed
tpc_extStartArmed = _TpcAccess.tpc_extStartArmed
tpc_overloadNone = _TpcAccess.tpc_overloadNone
tpc_overloadPositive = _TpcAccess.tpc_overloadPositive
tpc_overloadNegative = _TpcAccess.tpc_overloadNegative
tpc_iepe_off = _TpcAccess.tpc_iepe_off
tpc_iepe_nosensor = _TpcAccess.tpc_iepe_nosensor
tpc_iepe_ok = _TpcAccess.tpc_iepe_ok
class TPC_InputStatus(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OverloadLive = property(_TpcAccess.TPC_InputStatus_OverloadLive_get, _TpcAccess.TPC_InputStatus_OverloadLive_set)
    OverloadMeas = property(_TpcAccess.TPC_InputStatus_OverloadMeas_get, _TpcAccess.TPC_InputStatus_OverloadMeas_set)
    IEPEStatus = property(_TpcAccess.TPC_InputStatus_IEPEStatus_get, _TpcAccess.TPC_InputStatus_IEPEStatus_set)

    def __init__(self):
        _TpcAccess.TPC_InputStatus_swiginit(self, _TpcAccess.new_TPC_InputStatus())
    __swig_destroy__ = _TpcAccess.delete_TPC_InputStatus

# Register TPC_InputStatus in _TpcAccess:
_TpcAccess.TPC_InputStatus_swigregister(TPC_InputStatus)
class TPC_BoardStatus(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    recordingState = property(_TpcAccess.TPC_BoardStatus_recordingState_get, _TpcAccess.TPC_BoardStatus_recordingState_set)
    triggerState = property(_TpcAccess.TPC_BoardStatus_triggerState_get, _TpcAccess.TPC_BoardStatus_triggerState_set)
    blockCounter = property(_TpcAccess.TPC_BoardStatus_blockCounter_get, _TpcAccess.TPC_BoardStatus_blockCounter_set)
    dataCounter = property(_TpcAccess.TPC_BoardStatus_dataCounter_get, _TpcAccess.TPC_BoardStatus_dataCounter_set)
    dataLostCounter = property(_TpcAccess.TPC_BoardStatus_dataLostCounter_get, _TpcAccess.TPC_BoardStatus_dataLostCounter_set)
    blockLostCounter = property(_TpcAccess.TPC_BoardStatus_blockLostCounter_get, _TpcAccess.TPC_BoardStatus_blockLostCounter_set)
    inputs = property(_TpcAccess.TPC_BoardStatus_inputs_get, _TpcAccess.TPC_BoardStatus_inputs_set)

    def __init__(self):
        _TpcAccess.TPC_BoardStatus_swiginit(self, _TpcAccess.new_TPC_BoardStatus())
    __swig_destroy__ = _TpcAccess.delete_TPC_BoardStatus

# Register TPC_BoardStatus in _TpcAccess:
_TpcAccess.TPC_BoardStatus_swigregister(TPC_BoardStatus)
class TPC_GPSStatus(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    locked = property(_TpcAccess.TPC_GPSStatus_locked_get, _TpcAccess.TPC_GPSStatus_locked_set)
    NrOfSatVisible = property(_TpcAccess.TPC_GPSStatus_NrOfSatVisible_get, _TpcAccess.TPC_GPSStatus_NrOfSatVisible_set)
    gpsTime = property(_TpcAccess.TPC_GPSStatus_gpsTime_get, _TpcAccess.TPC_GPSStatus_gpsTime_set)
    lastFrame = property(_TpcAccess.TPC_GPSStatus_lastFrame_get, _TpcAccess.TPC_GPSStatus_lastFrame_set)
    nrOfloggedPositions = property(_TpcAccess.TPC_GPSStatus_nrOfloggedPositions_get, _TpcAccess.TPC_GPSStatus_nrOfloggedPositions_set)

    def __init__(self):
        _TpcAccess.TPC_GPSStatus_swiginit(self, _TpcAccess.new_TPC_GPSStatus())
    __swig_destroy__ = _TpcAccess.delete_TPC_GPSStatus

# Register TPC_GPSStatus in _TpcAccess:
_TpcAccess.TPC_GPSStatus_swigregister(TPC_GPSStatus)
class TPC_TempStatus(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CPUTemp = property(_TpcAccess.TPC_TempStatus_CPUTemp_get, _TpcAccess.TPC_TempStatus_CPUTemp_set)
    BoardTemp = property(_TpcAccess.TPC_TempStatus_BoardTemp_get, _TpcAccess.TPC_TempStatus_BoardTemp_set)
    Res1Temp = property(_TpcAccess.TPC_TempStatus_Res1Temp_get, _TpcAccess.TPC_TempStatus_Res1Temp_set)
    Res2Temp = property(_TpcAccess.TPC_TempStatus_Res2Temp_get, _TpcAccess.TPC_TempStatus_Res2Temp_set)

    def __init__(self):
        _TpcAccess.TPC_TempStatus_swiginit(self, _TpcAccess.new_TPC_TempStatus())
    __swig_destroy__ = _TpcAccess.delete_TPC_TempStatus

# Register TPC_TempStatus in _TpcAccess:
_TpcAccess.TPC_TempStatus_swigregister(TPC_TempStatus)
class TPC_DeviceStatus(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    deviceError = property(_TpcAccess.TPC_DeviceStatus_deviceError_get, _TpcAccess.TPC_DeviceStatus_deviceError_set)
    measurementNumber = property(_TpcAccess.TPC_DeviceStatus_measurementNumber_get, _TpcAccess.TPC_DeviceStatus_measurementNumber_set)
    measurementStartTime = property(_TpcAccess.TPC_DeviceStatus_measurementStartTime_get, _TpcAccess.TPC_DeviceStatus_measurementStartTime_set)
    startInProgress = property(_TpcAccess.TPC_DeviceStatus_startInProgress_get, _TpcAccess.TPC_DeviceStatus_startInProgress_set)
    boards = property(_TpcAccess.TPC_DeviceStatus_boards_get, _TpcAccess.TPC_DeviceStatus_boards_set)
    settingsChangesCounter = property(_TpcAccess.TPC_DeviceStatus_settingsChangesCounter_get, _TpcAccess.TPC_DeviceStatus_settingsChangesCounter_set)
    clusterNrs = property(_TpcAccess.TPC_DeviceStatus_clusterNrs_get, _TpcAccess.TPC_DeviceStatus_clusterNrs_set)
    operationModes = property(_TpcAccess.TPC_DeviceStatus_operationModes_get, _TpcAccess.TPC_DeviceStatus_operationModes_set)
    autosequenceState = property(_TpcAccess.TPC_DeviceStatus_autosequenceState_get, _TpcAccess.TPC_DeviceStatus_autosequenceState_set)
    extStartState = property(_TpcAccess.TPC_DeviceStatus_extStartState_get, _TpcAccess.TPC_DeviceStatus_extStartState_set)
    gpsStatus = property(_TpcAccess.TPC_DeviceStatus_gpsStatus_get, _TpcAccess.TPC_DeviceStatus_gpsStatus_set)
    tempStatus = property(_TpcAccess.TPC_DeviceStatus_tempStatus_get, _TpcAccess.TPC_DeviceStatus_tempStatus_set)

    def __init__(self):
        _TpcAccess.TPC_DeviceStatus_swiginit(self, _TpcAccess.new_TPC_DeviceStatus())
    __swig_destroy__ = _TpcAccess.delete_TPC_DeviceStatus

# Register TPC_DeviceStatus in _TpcAccess:
_TpcAccess.TPC_DeviceStatus_swigregister(TPC_DeviceStatus)

def TPC_GetDeviceStatus(deviceIx, status, structSize):
    return _TpcAccess.TPC_GetDeviceStatus(deviceIx, status, structSize)

def TPC_SetStatusCallback(callback, userData):
    return _TpcAccess.TPC_SetStatusCallback(callback, userData)

def TPC_SetStatusCallbackSystem(id, callback, userData):
    return _TpcAccess.TPC_SetStatusCallbackSystem(id, callback, userData)
class TPC_YMetaData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    inputActive = property(_TpcAccess.TPC_YMetaData_inputActive_get, _TpcAccess.TPC_YMetaData_inputActive_set)
    analogMask = property(_TpcAccess.TPC_YMetaData_analogMask_get, _TpcAccess.TPC_YMetaData_analogMask_set)
    markerMask = property(_TpcAccess.TPC_YMetaData_markerMask_get, _TpcAccess.TPC_YMetaData_markerMask_set)
    numberOfMarkerBits = property(_TpcAccess.TPC_YMetaData_numberOfMarkerBits_get, _TpcAccess.TPC_YMetaData_numberOfMarkerBits_set)
    resolutionInBits = property(_TpcAccess.TPC_YMetaData_resolutionInBits_get, _TpcAccess.TPC_YMetaData_resolutionInBits_set)
    bytesPerSample = property(_TpcAccess.TPC_YMetaData_bytesPerSample_get, _TpcAccess.TPC_YMetaData_bytesPerSample_set)
    binToVoltFactor = property(_TpcAccess.TPC_YMetaData_binToVoltFactor_get, _TpcAccess.TPC_YMetaData_binToVoltFactor_set)
    binToVoltConstant = property(_TpcAccess.TPC_YMetaData_binToVoltConstant_get, _TpcAccess.TPC_YMetaData_binToVoltConstant_set)
    binToPhysicalFactor = property(_TpcAccess.TPC_YMetaData_binToPhysicalFactor_get, _TpcAccess.TPC_YMetaData_binToPhysicalFactor_set)
    binToPhysicalConstant = property(_TpcAccess.TPC_YMetaData_binToPhysicalConstant_get, _TpcAccess.TPC_YMetaData_binToPhysicalConstant_set)
    voltToPhysicalFactor = property(_TpcAccess.TPC_YMetaData_voltToPhysicalFactor_get, _TpcAccess.TPC_YMetaData_voltToPhysicalFactor_set)
    voltToPhysicalConstant = property(_TpcAccess.TPC_YMetaData_voltToPhysicalConstant_get, _TpcAccess.TPC_YMetaData_voltToPhysicalConstant_set)

    def __init__(self):
        _TpcAccess.TPC_YMetaData_swiginit(self, _TpcAccess.new_TPC_YMetaData())
    __swig_destroy__ = _TpcAccess.delete_TPC_YMetaData

# Register TPC_YMetaData in _TpcAccess:
_TpcAccess.TPC_YMetaData_swigregister(TPC_YMetaData)

def TPC_GetYMetaData(deviceIx, boardAddress, inputNumber, measurementNumber, metaData, structSize):
    return _TpcAccess.TPC_GetYMetaData(deviceIx, boardAddress, inputNumber, measurementNumber, metaData, structSize)

def TPC_GetMetaDataParameter(deviceIx, boardAddress, inputNumber, measurementNumber, parameter):
    return _TpcAccess.TPC_GetMetaDataParameter(deviceIx, boardAddress, inputNumber, measurementNumber, parameter)

def TPC_GetMetaDataAttribute(deviceIx, boardAddress, inputNumber, measurementNumber, key, buffer, maxLen):
    return _TpcAccess.TPC_GetMetaDataAttribute(deviceIx, boardAddress, inputNumber, measurementNumber, key, buffer, maxLen)

def TPC_GetAllMetaDataAttributes(deviceIx, measurementNumber, callback, userData):
    return _TpcAccess.TPC_GetAllMetaDataAttributes(deviceIx, measurementNumber, callback, userData)

def TPC_GetMetaDataAssociatedChannels(deviceIx, boardAddress, inputNumber, measurementNumber, list, count):
    return _TpcAccess.TPC_GetMetaDataAssociatedChannels(deviceIx, boardAddress, inputNumber, measurementNumber, list, count)
class TPC_TMetaData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    growing = property(_TpcAccess.TPC_TMetaData_growing_get, _TpcAccess.TPC_TMetaData_growing_set)
    timeBaseSource = property(_TpcAccess.TPC_TMetaData_timeBaseSource_get, _TpcAccess.TPC_TMetaData_timeBaseSource_set)
    sampleRate = property(_TpcAccess.TPC_TMetaData_sampleRate_get, _TpcAccess.TPC_TMetaData_sampleRate_set)
    externalClockDivisor = property(_TpcAccess.TPC_TMetaData_externalClockDivisor_get, _TpcAccess.TPC_TMetaData_externalClockDivisor_set)
    startTime = property(_TpcAccess.TPC_TMetaData_startTime_get, _TpcAccess.TPC_TMetaData_startTime_set)
    triggerTime = property(_TpcAccess.TPC_TMetaData_triggerTime_get, _TpcAccess.TPC_TMetaData_triggerTime_set)
    triggerSample = property(_TpcAccess.TPC_TMetaData_triggerSample_get, _TpcAccess.TPC_TMetaData_triggerSample_set)
    blockLength = property(_TpcAccess.TPC_TMetaData_blockLength_get, _TpcAccess.TPC_TMetaData_blockLength_set)
    stopTriggerSample = property(_TpcAccess.TPC_TMetaData_stopTriggerSample_get, _TpcAccess.TPC_TMetaData_stopTriggerSample_set)
    singleChannel = property(_TpcAccess.TPC_TMetaData_singleChannel_get, _TpcAccess.TPC_TMetaData_singleChannel_set)
    boardAddress = property(_TpcAccess.TPC_TMetaData_boardAddress_get, _TpcAccess.TPC_TMetaData_boardAddress_set)
    inputNumber = property(_TpcAccess.TPC_TMetaData_inputNumber_get, _TpcAccess.TPC_TMetaData_inputNumber_set)

    def __init__(self):
        _TpcAccess.TPC_TMetaData_swiginit(self, _TpcAccess.new_TPC_TMetaData())
    __swig_destroy__ = _TpcAccess.delete_TPC_TMetaData

# Register TPC_TMetaData in _TpcAccess:
_TpcAccess.TPC_TMetaData_swigregister(TPC_TMetaData)

def TPC_GetTMetaData(deviceIx, boardAddress, blockNumber, measurementNumber, metaData, structSize):
    return _TpcAccess.TPC_GetTMetaData(deviceIx, boardAddress, blockNumber, measurementNumber, metaData, structSize)

def TPC_GetAllTMetaData(deviceIx, boardAddress, blockNumberFrom, blockNumberTo, measurementNumber, metaData, structSize):
    return _TpcAccess.TPC_GetAllTMetaData(deviceIx, boardAddress, blockNumberFrom, blockNumberTo, measurementNumber, metaData, structSize)

def TPC_GetData(deviceIx, boardAddress, inputNumber, blockNumber, measurementNumber, dataStart, dataLength, data):
    return _TpcAccess.TPC_GetData(deviceIx, boardAddress, inputNumber, blockNumber, measurementNumber, dataStart, dataLength, data)

def TPC_GetRawData(deviceIx, boardAddress, inputNumber, blockNumber, measurementNumber, dataStart, dataLength, data):
    return _TpcAccess.TPC_GetRawData(deviceIx, boardAddress, inputNumber, blockNumber, measurementNumber, dataStart, dataLength, data)

def TPC_GetMinMaxData(deviceIx, boardAddress, inputNumber, blockNumber, measurementNumber, dataStart, dataLength, resultLength, data):
    return _TpcAccess.TPC_GetMinMaxData(deviceIx, boardAddress, inputNumber, blockNumber, measurementNumber, dataStart, dataLength, resultLength, data)

def TPC_GetRawMinMaxData(deviceIx, boardAddress, inputNumber, blockNumber, measurementNumber, dataStart, dataLength, resultLength, data):
    return _TpcAccess.TPC_GetRawMinMaxData(deviceIx, boardAddress, inputNumber, blockNumber, measurementNumber, dataStart, dataLength, resultLength, data)

def TPC_DeferredGetData(deviceIx, boardAddress, inputNumber, blockNumber, dataStart, dataLength, data, error):
    return _TpcAccess.TPC_DeferredGetData(deviceIx, boardAddress, inputNumber, blockNumber, dataStart, dataLength, data, error)

def TPC_DeferredGetRawData(deviceIx, boardAddress, inputNumber, blockNumber, dataStart, dataLength, data, error):
    return _TpcAccess.TPC_DeferredGetRawData(deviceIx, boardAddress, inputNumber, blockNumber, dataStart, dataLength, data, error)

def TPC_DeferredGetMinMaxData(deviceIx, boardAddress, inputNumber, blockNumber, dataStart, dataLength, resultLength, data, error):
    return _TpcAccess.TPC_DeferredGetMinMaxData(deviceIx, boardAddress, inputNumber, blockNumber, dataStart, dataLength, resultLength, data, error)

def TPC_DeferredGetRawMinMaxData(deviceIx, boardAddress, inputNumber, blockNumber, dataStart, dataLength, resultLength, data, error):
    return _TpcAccess.TPC_DeferredGetRawMinMaxData(deviceIx, boardAddress, inputNumber, blockNumber, dataStart, dataLength, resultLength, data, error)

def TPC_ProcessDeferredDataRequests(measurementNumber):
    return _TpcAccess.TPC_ProcessDeferredDataRequests(measurementNumber)

def TPC_CancelDeferredDataRequests():
    return _TpcAccess.TPC_CancelDeferredDataRequests()

def TPC_SendServerCustomCommand(deviceIx, command, result, length):
    return _TpcAccess.TPC_SendServerCustomCommand(deviceIx, command, result, length)

def TPC_WriteSettingFile(filename):
    return _TpcAccess.TPC_WriteSettingFile(filename)

def TPC_LoadSettingFile(filename):
    return _TpcAccess.TPC_LoadSettingFile(filename)

def TPC_TerminateTpcAccess():
    return _TpcAccess.TPC_TerminateTpcAccess()

def TPC_GetGPSLogList(deviceIx, _from, to, log):
    return _TpcAccess.TPC_GetGPSLogList(deviceIx, _from, to, log)

def new_int32_tp():
    return _TpcAccess.new_int32_tp()

def copy_int32_tp(value):
    return _TpcAccess.copy_int32_tp(value)

def delete_int32_tp(obj):
    return _TpcAccess.delete_int32_tp(obj)

def int32_tp_assign(obj, value):
    return _TpcAccess.int32_tp_assign(obj, value)

def int32_tp_value(obj):
    return _TpcAccess.int32_tp_value(obj)

def new_int32_tArray(nelements):
    return _TpcAccess.new_int32_tArray(nelements)

def delete_int32_tArray(ary):
    return _TpcAccess.delete_int32_tArray(ary)

def int32_tArray_getitem(ary, index):
    return _TpcAccess.int32_tArray_getitem(ary, index)

def int32_tArray_setitem(ary, index, value):
    return _TpcAccess.int32_tArray_setitem(ary, index, value)

def new_doubleArray(nelements):
    return _TpcAccess.new_doubleArray(nelements)

def delete_doubleArray(ary):
    return _TpcAccess.delete_doubleArray(ary)

def doubleArray_getitem(ary, index):
    return _TpcAccess.doubleArray_getitem(ary, index)

def doubleArray_setitem(ary, index, value):
    return _TpcAccess.doubleArray_setitem(ary, index, value)

